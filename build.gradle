apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.6'
  }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = 0.3.4

configure(allprojects) {
	ext.javadocLinks = [
		"http://docs.oracle.com/javase/7/docs/api",
		"http://docs.oracle.com/javaee/7/api",
		"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc",
		"http://jcommander.org/apidocs",
		"http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs"
	] as String[]
}

configurations {
    doclet
}

pmd {
	ignoreFailures = true
}

findbugs {
    toolVersion = "3.0.0"
    ignoreFailures = true
    reportLevel = "low"
}

checkstyle {
	toolVersion = 6.1
	showViolations = false
}

javadoc {
	title = "Glacier Interface"
	options.memberLevel = JavadocMemberLevel.PRIVATE
	options.author = true
	options.links(project.ext.javadocLinks)
	failOnError = false
}

dependencies {
    doclet group: 'org.jboss.apiviz', name: 'apiviz', version: '1.3.2.GA'
}

def getPackageName() {
	return "glacier-interface"
}

def getFilename() {
	return getPackageName() + ".jar"
}

jar {
	archiveName = getFilename()
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes(
        	'Implementation-Title': 'Glacier', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.matoski.glacier.Main'
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-glacier', version: '1.9.8' 
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
    compile group: 'com.beust', name: 'jcommander', version: '1.35'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    
    testCompile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    testCompile group: 'junit', name: 'junit', version: '4.+'
        
}

test {
    systemProperties 'property': 'value'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task('package', dependsOn: 'build', type: Exec) {
   def argsList = [ version, getPackageName() ]
   commandLine './package.sh'
   args = argsList
   
}

checkstyleMain << {
    ant.xslt(in: reports.xml.destination,
             style: new File('config/checkstyle/checkstyle-noframes-sorted.xsl'),
             out: new File(reports.xml.destination.parent, 'main.html'))
}

